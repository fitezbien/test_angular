import { ECalendarValue } from '../../types/calendar-value-enum';
import { SingleCalendarValue } from '../../types/single-calendar-value';
import { Moment, unitOfTime } from 'moment';
import { CalendarValue } from '../../types/calendar-value';
import { IDate } from '../../models/date.model';
import { CalendarMode } from '../../types/calendar-mode';
import { DateValidator } from '../../types/validator.type';
import { ICalendarInternal } from '../../models/calendar.model';
import * as ɵngcc0 from '@angular/core';
export interface DateLimits {
    minDate?: SingleCalendarValue;
    maxDate?: SingleCalendarValue;
    minTime?: SingleCalendarValue;
    maxTime?: SingleCalendarValue;
}
export declare class UtilsService {
    static debounce(func: Function, wait: number): () => void;
    createArray(size: number): number[];
    convertToMoment(date: SingleCalendarValue, format: string): Moment;
    isDateValid(date: string, format: string): boolean;
    getDefaultDisplayDate(current: Moment, selected: Moment[], allowMultiSelect: boolean, minDate: Moment): Moment;
    getInputType(value: CalendarValue, allowMultiSelect: boolean): ECalendarValue;
    convertToMomentArray(value: CalendarValue, config: {
        allowMultiSelect?: boolean;
        format?: string;
    }): Moment[];
    convertFromMomentArray(format: string, value: Moment[], convertTo: ECalendarValue): CalendarValue;
    convertToString(value: CalendarValue, format: string): string;
    clearUndefined<T>(obj: T): T;
    updateSelected(isMultiple: boolean, currentlySelected: Moment[], date: IDate, granularity?: unitOfTime.Base): Moment[];
    closestParent(element: HTMLElement, selector: string): HTMLElement;
    onlyTime(m: Moment): Moment;
    granularityFromType(calendarType: CalendarMode): unitOfTime.Base;
    createValidator({ minDate, maxDate, minTime, maxTime }: DateLimits, format: string, calendarType: CalendarMode): DateValidator;
    datesStringToStringArray(value: string): string[];
    getValidMomentArray(value: string, format: string): Moment[];
    shouldShowCurrent(showGoToCurrent: boolean, mode: CalendarMode, min: Moment, max: Moment): boolean;
    isDateInRange(date: Moment, from: Moment, to: Moment): boolean;
    convertPropsToMoment(obj: {
        [key: string]: any;
    }, format: string, props: string[]): void;
    shouldResetCurrentView<T extends ICalendarInternal>(prevConf: T, currentConf: T): boolean;
    getNativeElement(elem: HTMLElement | string): HTMLElement;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UtilsService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<UtilsService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJ1dGlscy5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFQ2FsZW5kYXJWYWx1ZSB9IGZyb20gJy4uLy4uL3R5cGVzL2NhbGVuZGFyLXZhbHVlLWVudW0nO1xuaW1wb3J0IHsgU2luZ2xlQ2FsZW5kYXJWYWx1ZSB9IGZyb20gJy4uLy4uL3R5cGVzL3NpbmdsZS1jYWxlbmRhci12YWx1ZSc7XG5pbXBvcnQgeyBNb21lbnQsIHVuaXRPZlRpbWUgfSBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHsgQ2FsZW5kYXJWYWx1ZSB9IGZyb20gJy4uLy4uL3R5cGVzL2NhbGVuZGFyLXZhbHVlJztcbmltcG9ydCB7IElEYXRlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2RhdGUubW9kZWwnO1xuaW1wb3J0IHsgQ2FsZW5kYXJNb2RlIH0gZnJvbSAnLi4vLi4vdHlwZXMvY2FsZW5kYXItbW9kZSc7XG5pbXBvcnQgeyBEYXRlVmFsaWRhdG9yIH0gZnJvbSAnLi4vLi4vdHlwZXMvdmFsaWRhdG9yLnR5cGUnO1xuaW1wb3J0IHsgSUNhbGVuZGFySW50ZXJuYWwgfSBmcm9tICcuLi8uLi9tb2RlbHMvY2FsZW5kYXIubW9kZWwnO1xuZXhwb3J0IGludGVyZmFjZSBEYXRlTGltaXRzIHtcbiAgICBtaW5EYXRlPzogU2luZ2xlQ2FsZW5kYXJWYWx1ZTtcbiAgICBtYXhEYXRlPzogU2luZ2xlQ2FsZW5kYXJWYWx1ZTtcbiAgICBtaW5UaW1lPzogU2luZ2xlQ2FsZW5kYXJWYWx1ZTtcbiAgICBtYXhUaW1lPzogU2luZ2xlQ2FsZW5kYXJWYWx1ZTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFV0aWxzU2VydmljZSB7XG4gICAgc3RhdGljIGRlYm91bmNlKGZ1bmM6IEZ1bmN0aW9uLCB3YWl0OiBudW1iZXIpOiAoKSA9PiB2b2lkO1xuICAgIGNyZWF0ZUFycmF5KHNpemU6IG51bWJlcik6IG51bWJlcltdO1xuICAgIGNvbnZlcnRUb01vbWVudChkYXRlOiBTaW5nbGVDYWxlbmRhclZhbHVlLCBmb3JtYXQ6IHN0cmluZyk6IE1vbWVudDtcbiAgICBpc0RhdGVWYWxpZChkYXRlOiBzdHJpbmcsIGZvcm1hdDogc3RyaW5nKTogYm9vbGVhbjtcbiAgICBnZXREZWZhdWx0RGlzcGxheURhdGUoY3VycmVudDogTW9tZW50LCBzZWxlY3RlZDogTW9tZW50W10sIGFsbG93TXVsdGlTZWxlY3Q6IGJvb2xlYW4sIG1pbkRhdGU6IE1vbWVudCk6IE1vbWVudDtcbiAgICBnZXRJbnB1dFR5cGUodmFsdWU6IENhbGVuZGFyVmFsdWUsIGFsbG93TXVsdGlTZWxlY3Q6IGJvb2xlYW4pOiBFQ2FsZW5kYXJWYWx1ZTtcbiAgICBjb252ZXJ0VG9Nb21lbnRBcnJheSh2YWx1ZTogQ2FsZW5kYXJWYWx1ZSwgY29uZmlnOiB7XG4gICAgICAgIGFsbG93TXVsdGlTZWxlY3Q/OiBib29sZWFuO1xuICAgICAgICBmb3JtYXQ/OiBzdHJpbmc7XG4gICAgfSk6IE1vbWVudFtdO1xuICAgIGNvbnZlcnRGcm9tTW9tZW50QXJyYXkoZm9ybWF0OiBzdHJpbmcsIHZhbHVlOiBNb21lbnRbXSwgY29udmVydFRvOiBFQ2FsZW5kYXJWYWx1ZSk6IENhbGVuZGFyVmFsdWU7XG4gICAgY29udmVydFRvU3RyaW5nKHZhbHVlOiBDYWxlbmRhclZhbHVlLCBmb3JtYXQ6IHN0cmluZyk6IHN0cmluZztcbiAgICBjbGVhclVuZGVmaW5lZDxUPihvYmo6IFQpOiBUO1xuICAgIHVwZGF0ZVNlbGVjdGVkKGlzTXVsdGlwbGU6IGJvb2xlYW4sIGN1cnJlbnRseVNlbGVjdGVkOiBNb21lbnRbXSwgZGF0ZTogSURhdGUsIGdyYW51bGFyaXR5PzogdW5pdE9mVGltZS5CYXNlKTogTW9tZW50W107XG4gICAgY2xvc2VzdFBhcmVudChlbGVtZW50OiBIVE1MRWxlbWVudCwgc2VsZWN0b3I6IHN0cmluZyk6IEhUTUxFbGVtZW50O1xuICAgIG9ubHlUaW1lKG06IE1vbWVudCk6IE1vbWVudDtcbiAgICBncmFudWxhcml0eUZyb21UeXBlKGNhbGVuZGFyVHlwZTogQ2FsZW5kYXJNb2RlKTogdW5pdE9mVGltZS5CYXNlO1xuICAgIGNyZWF0ZVZhbGlkYXRvcih7IG1pbkRhdGUsIG1heERhdGUsIG1pblRpbWUsIG1heFRpbWUgfTogRGF0ZUxpbWl0cywgZm9ybWF0OiBzdHJpbmcsIGNhbGVuZGFyVHlwZTogQ2FsZW5kYXJNb2RlKTogRGF0ZVZhbGlkYXRvcjtcbiAgICBkYXRlc1N0cmluZ1RvU3RyaW5nQXJyYXkodmFsdWU6IHN0cmluZyk6IHN0cmluZ1tdO1xuICAgIGdldFZhbGlkTW9tZW50QXJyYXkodmFsdWU6IHN0cmluZywgZm9ybWF0OiBzdHJpbmcpOiBNb21lbnRbXTtcbiAgICBzaG91bGRTaG93Q3VycmVudChzaG93R29Ub0N1cnJlbnQ6IGJvb2xlYW4sIG1vZGU6IENhbGVuZGFyTW9kZSwgbWluOiBNb21lbnQsIG1heDogTW9tZW50KTogYm9vbGVhbjtcbiAgICBpc0RhdGVJblJhbmdlKGRhdGU6IE1vbWVudCwgZnJvbTogTW9tZW50LCB0bzogTW9tZW50KTogYm9vbGVhbjtcbiAgICBjb252ZXJ0UHJvcHNUb01vbWVudChvYmo6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuICAgIH0sIGZvcm1hdDogc3RyaW5nLCBwcm9wczogc3RyaW5nW10pOiB2b2lkO1xuICAgIHNob3VsZFJlc2V0Q3VycmVudFZpZXc8VCBleHRlbmRzIElDYWxlbmRhckludGVybmFsPihwcmV2Q29uZjogVCwgY3VycmVudENvbmY6IFQpOiBib29sZWFuO1xuICAgIGdldE5hdGl2ZUVsZW1lbnQoZWxlbTogSFRNTEVsZW1lbnQgfCBzdHJpbmcpOiBIVE1MRWxlbWVudDtcbn1cbiJdfQ==