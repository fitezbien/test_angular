import { CalendarMode } from '../common/types/calendar-mode';
import { IDatePickerDirectiveConfig } from './date-picker-directive-config.model';
import { DatePickerDirectiveService } from './date-picker-directive.service';
import { IDpDayPickerApi } from './date-picker.api';
import { DatePickerComponent } from './date-picker.component';
import { ComponentFactoryResolver, ElementRef, EventEmitter, OnInit, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { CalendarValue } from '../common/types/calendar-value';
import { SingleCalendarValue } from '../common/types/single-calendar-value';
import { INavEvent } from '../common/models/navigation-event.model';
import { UtilsService } from '../common/services/utils/utils.service';
import { ISelectionEvent } from '../common/types/selection-evet.model';
import * as ɵngcc0 from '@angular/core';
export declare class DatePickerDirective implements OnInit {
    viewContainerRef: ViewContainerRef;
    elemRef: ElementRef;
    componentFactoryResolver: ComponentFactoryResolver;
    service: DatePickerDirectiveService;
    formControl: NgControl;
    utilsService: UtilsService;
    config: IDatePickerDirectiveConfig;
    attachTo: ElementRef | string;
    theme: string;
    mode: CalendarMode;
    minDate: SingleCalendarValue;
    maxDate: SingleCalendarValue;
    minTime: SingleCalendarValue;
    maxTime: SingleCalendarValue;
    displayDate: SingleCalendarValue;
    open: EventEmitter<void>;
    close: EventEmitter<void>;
    onChange: EventEmitter<CalendarValue>;
    onGoToCurrent: EventEmitter<void>;
    onLeftNav: EventEmitter<INavEvent>;
    onRightNav: EventEmitter<INavEvent>;
    onSelect: EventEmitter<ISelectionEvent>;
    datePicker: DatePickerComponent;
    api: IDpDayPickerApi;
    private _config;
    private _attachTo;
    private _theme;
    private _mode;
    private _minDate;
    private _maxDate;
    private _minTime;
    private _maxTime;
    private _displayDate;
    constructor(viewContainerRef: ViewContainerRef, elemRef: ElementRef, componentFactoryResolver: ComponentFactoryResolver, service: DatePickerDirectiveService, formControl: NgControl, utilsService: UtilsService);
    ngOnInit(): void;
    createDatePicker(): DatePickerComponent;
    attachModelToDatePicker(): void;
    onClick(): void;
    onFocus(): void;
    markForCheck(): void;
    private updateDatepickerConfig;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DatePickerDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DatePickerDirective, "[dpDayPicker]", ["dpDayPicker"], {
    "config": "dpDayPicker";
    "attachTo": "attachTo";
    "theme": "theme";
    "mode": "mode";
    "minDate": "minDate";
    "maxDate": "maxDate";
    "minTime": "minTime";
    "maxTime": "maxTime";
    "displayDate": "displayDate";
}, {
    "open": "open";
    "close": "close";
    "onChange": "onChange";
    "onGoToCurrent": "onGoToCurrent";
    "onLeftNav": "onLeftNav";
    "onRightNav": "onRightNav";
    "onSelect": "onSelect";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXIuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImRhdGUtcGlja2VyLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMENBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FsZW5kYXJNb2RlIH0gZnJvbSAnLi4vY29tbW9uL3R5cGVzL2NhbGVuZGFyLW1vZGUnO1xuaW1wb3J0IHsgSURhdGVQaWNrZXJEaXJlY3RpdmVDb25maWcgfSBmcm9tICcuL2RhdGUtcGlja2VyLWRpcmVjdGl2ZS1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgRGF0ZVBpY2tlckRpcmVjdGl2ZVNlcnZpY2UgfSBmcm9tICcuL2RhdGUtcGlja2VyLWRpcmVjdGl2ZS5zZXJ2aWNlJztcbmltcG9ydCB7IElEcERheVBpY2tlckFwaSB9IGZyb20gJy4vZGF0ZS1waWNrZXIuYXBpJztcbmltcG9ydCB7IERhdGVQaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL2RhdGUtcGlja2VyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0NvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDYWxlbmRhclZhbHVlIH0gZnJvbSAnLi4vY29tbW9uL3R5cGVzL2NhbGVuZGFyLXZhbHVlJztcbmltcG9ydCB7IFNpbmdsZUNhbGVuZGFyVmFsdWUgfSBmcm9tICcuLi9jb21tb24vdHlwZXMvc2luZ2xlLWNhbGVuZGFyLXZhbHVlJztcbmltcG9ydCB7IElOYXZFdmVudCB9IGZyb20gJy4uL2NvbW1vbi9tb2RlbHMvbmF2aWdhdGlvbi1ldmVudC5tb2RlbCc7XG5pbXBvcnQgeyBVdGlsc1NlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vc2VydmljZXMvdXRpbHMvdXRpbHMuc2VydmljZSc7XG5pbXBvcnQgeyBJU2VsZWN0aW9uRXZlbnQgfSBmcm9tICcuLi9jb21tb24vdHlwZXMvc2VsZWN0aW9uLWV2ZXQubW9kZWwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0ZVBpY2tlckRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZjtcbiAgICBlbGVtUmVmOiBFbGVtZW50UmVmO1xuICAgIGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyO1xuICAgIHNlcnZpY2U6IERhdGVQaWNrZXJEaXJlY3RpdmVTZXJ2aWNlO1xuICAgIGZvcm1Db250cm9sOiBOZ0NvbnRyb2w7XG4gICAgdXRpbHNTZXJ2aWNlOiBVdGlsc1NlcnZpY2U7XG4gICAgY29uZmlnOiBJRGF0ZVBpY2tlckRpcmVjdGl2ZUNvbmZpZztcbiAgICBhdHRhY2hUbzogRWxlbWVudFJlZiB8IHN0cmluZztcbiAgICB0aGVtZTogc3RyaW5nO1xuICAgIG1vZGU6IENhbGVuZGFyTW9kZTtcbiAgICBtaW5EYXRlOiBTaW5nbGVDYWxlbmRhclZhbHVlO1xuICAgIG1heERhdGU6IFNpbmdsZUNhbGVuZGFyVmFsdWU7XG4gICAgbWluVGltZTogU2luZ2xlQ2FsZW5kYXJWYWx1ZTtcbiAgICBtYXhUaW1lOiBTaW5nbGVDYWxlbmRhclZhbHVlO1xuICAgIGRpc3BsYXlEYXRlOiBTaW5nbGVDYWxlbmRhclZhbHVlO1xuICAgIG9wZW46IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgICBjbG9zZTogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2FsZW5kYXJWYWx1ZT47XG4gICAgb25Hb1RvQ3VycmVudDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIG9uTGVmdE5hdjogRXZlbnRFbWl0dGVyPElOYXZFdmVudD47XG4gICAgb25SaWdodE5hdjogRXZlbnRFbWl0dGVyPElOYXZFdmVudD47XG4gICAgb25TZWxlY3Q6IEV2ZW50RW1pdHRlcjxJU2VsZWN0aW9uRXZlbnQ+O1xuICAgIGRhdGVQaWNrZXI6IERhdGVQaWNrZXJDb21wb25lbnQ7XG4gICAgYXBpOiBJRHBEYXlQaWNrZXJBcGk7XG4gICAgcHJpdmF0ZSBfY29uZmlnO1xuICAgIHByaXZhdGUgX2F0dGFjaFRvO1xuICAgIHByaXZhdGUgX3RoZW1lO1xuICAgIHByaXZhdGUgX21vZGU7XG4gICAgcHJpdmF0ZSBfbWluRGF0ZTtcbiAgICBwcml2YXRlIF9tYXhEYXRlO1xuICAgIHByaXZhdGUgX21pblRpbWU7XG4gICAgcHJpdmF0ZSBfbWF4VGltZTtcbiAgICBwcml2YXRlIF9kaXNwbGF5RGF0ZTtcbiAgICBjb25zdHJ1Y3Rvcih2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCBlbGVtUmVmOiBFbGVtZW50UmVmLCBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgc2VydmljZTogRGF0ZVBpY2tlckRpcmVjdGl2ZVNlcnZpY2UsIGZvcm1Db250cm9sOiBOZ0NvbnRyb2wsIHV0aWxzU2VydmljZTogVXRpbHNTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIGNyZWF0ZURhdGVQaWNrZXIoKTogRGF0ZVBpY2tlckNvbXBvbmVudDtcbiAgICBhdHRhY2hNb2RlbFRvRGF0ZVBpY2tlcigpOiB2b2lkO1xuICAgIG9uQ2xpY2soKTogdm9pZDtcbiAgICBvbkZvY3VzKCk6IHZvaWQ7XG4gICAgbWFya0ZvckNoZWNrKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSB1cGRhdGVEYXRlcGlja2VyQ29uZmlnO1xufVxuIl19