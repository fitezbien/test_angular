import { EventEmitter } from '@angular/core';
import { IDatePickerConfig, IDatePickerConfigInternal } from './date-picker-config.model';
import { Moment } from 'moment';
import { UtilsService } from '../common/services/utils/utils.service';
import { IDayCalendarConfig } from '../day-calendar/day-calendar-config.model';
import { TimeSelectService } from '../time-select/time-select.service';
import { DayTimeCalendarService } from '../day-time-calendar/day-time-calendar.service';
import { ITimeSelectConfig } from '../time-select/time-select-config.model';
import { CalendarMode } from '../common/types/calendar-mode';
import * as ɵngcc0 from '@angular/core';
export declare class DatePickerService {
    private utilsService;
    private timeSelectService;
    private daytimeCalendarService;
    readonly onPickerClosed: EventEmitter<null>;
    private defaultConfig;
    constructor(utilsService: UtilsService, timeSelectService: TimeSelectService, daytimeCalendarService: DayTimeCalendarService);
    getConfig(config: IDatePickerConfig, mode?: CalendarMode): IDatePickerConfigInternal;
    getDayConfigService(pickerConfig: IDatePickerConfig): IDayCalendarConfig;
    getDayTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig;
    getTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig;
    pickerClosed(): void;
    isValidInputDateValue(value: string, config: IDatePickerConfig): boolean;
    convertInputValueToMomentArray(value: string, config: IDatePickerConfig): Moment[];
    private getDefaultFormatByMode;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DatePickerService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DatePickerService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJkYXRlLXBpY2tlci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSURhdGVQaWNrZXJDb25maWcsIElEYXRlUGlja2VyQ29uZmlnSW50ZXJuYWwgfSBmcm9tICcuL2RhdGUtcGlja2VyLWNvbmZpZy5tb2RlbCc7XG5pbXBvcnQgeyBNb21lbnQgfSBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHsgVXRpbHNTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL3NlcnZpY2VzL3V0aWxzL3V0aWxzLnNlcnZpY2UnO1xuaW1wb3J0IHsgSURheUNhbGVuZGFyQ29uZmlnIH0gZnJvbSAnLi4vZGF5LWNhbGVuZGFyL2RheS1jYWxlbmRhci1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgVGltZVNlbGVjdFNlcnZpY2UgfSBmcm9tICcuLi90aW1lLXNlbGVjdC90aW1lLXNlbGVjdC5zZXJ2aWNlJztcbmltcG9ydCB7IERheVRpbWVDYWxlbmRhclNlcnZpY2UgfSBmcm9tICcuLi9kYXktdGltZS1jYWxlbmRhci9kYXktdGltZS1jYWxlbmRhci5zZXJ2aWNlJztcbmltcG9ydCB7IElUaW1lU2VsZWN0Q29uZmlnIH0gZnJvbSAnLi4vdGltZS1zZWxlY3QvdGltZS1zZWxlY3QtY29uZmlnLm1vZGVsJztcbmltcG9ydCB7IENhbGVuZGFyTW9kZSB9IGZyb20gJy4uL2NvbW1vbi90eXBlcy9jYWxlbmRhci1tb2RlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERhdGVQaWNrZXJTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHV0aWxzU2VydmljZTtcbiAgICBwcml2YXRlIHRpbWVTZWxlY3RTZXJ2aWNlO1xuICAgIHByaXZhdGUgZGF5dGltZUNhbGVuZGFyU2VydmljZTtcbiAgICByZWFkb25seSBvblBpY2tlckNsb3NlZDogRXZlbnRFbWl0dGVyPG51bGw+O1xuICAgIHByaXZhdGUgZGVmYXVsdENvbmZpZztcbiAgICBjb25zdHJ1Y3Rvcih1dGlsc1NlcnZpY2U6IFV0aWxzU2VydmljZSwgdGltZVNlbGVjdFNlcnZpY2U6IFRpbWVTZWxlY3RTZXJ2aWNlLCBkYXl0aW1lQ2FsZW5kYXJTZXJ2aWNlOiBEYXlUaW1lQ2FsZW5kYXJTZXJ2aWNlKTtcbiAgICBnZXRDb25maWcoY29uZmlnOiBJRGF0ZVBpY2tlckNvbmZpZywgbW9kZT86IENhbGVuZGFyTW9kZSk6IElEYXRlUGlja2VyQ29uZmlnSW50ZXJuYWw7XG4gICAgZ2V0RGF5Q29uZmlnU2VydmljZShwaWNrZXJDb25maWc6IElEYXRlUGlja2VyQ29uZmlnKTogSURheUNhbGVuZGFyQ29uZmlnO1xuICAgIGdldERheVRpbWVDb25maWdTZXJ2aWNlKHBpY2tlckNvbmZpZzogSURhdGVQaWNrZXJDb25maWcpOiBJVGltZVNlbGVjdENvbmZpZztcbiAgICBnZXRUaW1lQ29uZmlnU2VydmljZShwaWNrZXJDb25maWc6IElEYXRlUGlja2VyQ29uZmlnKTogSVRpbWVTZWxlY3RDb25maWc7XG4gICAgcGlja2VyQ2xvc2VkKCk6IHZvaWQ7XG4gICAgaXNWYWxpZElucHV0RGF0ZVZhbHVlKHZhbHVlOiBzdHJpbmcsIGNvbmZpZzogSURhdGVQaWNrZXJDb25maWcpOiBib29sZWFuO1xuICAgIGNvbnZlcnRJbnB1dFZhbHVlVG9Nb21lbnRBcnJheSh2YWx1ZTogc3RyaW5nLCBjb25maWc6IElEYXRlUGlja2VyQ29uZmlnKTogTW9tZW50W107XG4gICAgcHJpdmF0ZSBnZXREZWZhdWx0Rm9ybWF0QnlNb2RlO1xufVxuIl19