import { Moment } from 'moment';
import { WeekDays } from '../common/types/week-days.type';
import { UtilsService } from '../common/services/utils/utils.service';
import { IDay } from './day.model';
import { IDayCalendarConfig, IDayCalendarConfigInternal } from './day-calendar-config.model';
import { IMonthCalendarConfig } from '../month-calendar/month-calendar-config';
import * as ɵngcc0 from '@angular/core';
export declare class DayCalendarService {
    private utilsService;
    readonly DEFAULT_CONFIG: IDayCalendarConfig;
    private readonly DAYS;
    constructor(utilsService: UtilsService);
    getConfig(config: IDayCalendarConfig): IDayCalendarConfigInternal;
    generateDaysMap(firstDayOfWeek: WeekDays): {
        [key: string]: number;
    };
    generateMonthArray(config: IDayCalendarConfigInternal, month: Moment, selected: Moment[]): IDay[][];
    generateWeekdays(firstDayOfWeek: WeekDays): Moment[];
    isDateDisabled(date: Moment, config: IDayCalendarConfigInternal): boolean;
    getHeaderLabel(config: IDayCalendarConfigInternal, month: Moment): string;
    shouldShowLeft(min: Moment, currentMonthView: Moment): boolean;
    shouldShowRight(max: Moment, currentMonthView: Moment): boolean;
    generateDaysIndexMap(firstDayOfWeek: WeekDays): {
        [key: number]: string;
    };
    getMonthCalendarConfig(componentConfig: IDayCalendarConfigInternal): IMonthCalendarConfig;
    getDayBtnText(config: IDayCalendarConfigInternal, day: Moment): string;
    getDayBtnCssClass(config: IDayCalendarConfigInternal, day: Moment): string;
    private removeNearMonthWeeks;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayCalendarService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DayCalendarService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF5LWNhbGVuZGFyLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiZGF5LWNhbGVuZGFyLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb21lbnQgfSBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHsgV2Vla0RheXMgfSBmcm9tICcuLi9jb21tb24vdHlwZXMvd2Vlay1kYXlzLnR5cGUnO1xuaW1wb3J0IHsgVXRpbHNTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL3NlcnZpY2VzL3V0aWxzL3V0aWxzLnNlcnZpY2UnO1xuaW1wb3J0IHsgSURheSB9IGZyb20gJy4vZGF5Lm1vZGVsJztcbmltcG9ydCB7IElEYXlDYWxlbmRhckNvbmZpZywgSURheUNhbGVuZGFyQ29uZmlnSW50ZXJuYWwgfSBmcm9tICcuL2RheS1jYWxlbmRhci1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgSU1vbnRoQ2FsZW5kYXJDb25maWcgfSBmcm9tICcuLi9tb250aC1jYWxlbmRhci9tb250aC1jYWxlbmRhci1jb25maWcnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF5Q2FsZW5kYXJTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHV0aWxzU2VydmljZTtcbiAgICByZWFkb25seSBERUZBVUxUX0NPTkZJRzogSURheUNhbGVuZGFyQ29uZmlnO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgREFZUztcbiAgICBjb25zdHJ1Y3Rvcih1dGlsc1NlcnZpY2U6IFV0aWxzU2VydmljZSk7XG4gICAgZ2V0Q29uZmlnKGNvbmZpZzogSURheUNhbGVuZGFyQ29uZmlnKTogSURheUNhbGVuZGFyQ29uZmlnSW50ZXJuYWw7XG4gICAgZ2VuZXJhdGVEYXlzTWFwKGZpcnN0RGF5T2ZXZWVrOiBXZWVrRGF5cyk6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogbnVtYmVyO1xuICAgIH07XG4gICAgZ2VuZXJhdGVNb250aEFycmF5KGNvbmZpZzogSURheUNhbGVuZGFyQ29uZmlnSW50ZXJuYWwsIG1vbnRoOiBNb21lbnQsIHNlbGVjdGVkOiBNb21lbnRbXSk6IElEYXlbXVtdO1xuICAgIGdlbmVyYXRlV2Vla2RheXMoZmlyc3REYXlPZldlZWs6IFdlZWtEYXlzKTogTW9tZW50W107XG4gICAgaXNEYXRlRGlzYWJsZWQoZGF0ZTogTW9tZW50LCBjb25maWc6IElEYXlDYWxlbmRhckNvbmZpZ0ludGVybmFsKTogYm9vbGVhbjtcbiAgICBnZXRIZWFkZXJMYWJlbChjb25maWc6IElEYXlDYWxlbmRhckNvbmZpZ0ludGVybmFsLCBtb250aDogTW9tZW50KTogc3RyaW5nO1xuICAgIHNob3VsZFNob3dMZWZ0KG1pbjogTW9tZW50LCBjdXJyZW50TW9udGhWaWV3OiBNb21lbnQpOiBib29sZWFuO1xuICAgIHNob3VsZFNob3dSaWdodChtYXg6IE1vbWVudCwgY3VycmVudE1vbnRoVmlldzogTW9tZW50KTogYm9vbGVhbjtcbiAgICBnZW5lcmF0ZURheXNJbmRleE1hcChmaXJzdERheU9mV2VlazogV2Vla0RheXMpOiB7XG4gICAgICAgIFtrZXk6IG51bWJlcl06IHN0cmluZztcbiAgICB9O1xuICAgIGdldE1vbnRoQ2FsZW5kYXJDb25maWcoY29tcG9uZW50Q29uZmlnOiBJRGF5Q2FsZW5kYXJDb25maWdJbnRlcm5hbCk6IElNb250aENhbGVuZGFyQ29uZmlnO1xuICAgIGdldERheUJ0blRleHQoY29uZmlnOiBJRGF5Q2FsZW5kYXJDb25maWdJbnRlcm5hbCwgZGF5OiBNb21lbnQpOiBzdHJpbmc7XG4gICAgZ2V0RGF5QnRuQ3NzQ2xhc3MoY29uZmlnOiBJRGF5Q2FsZW5kYXJDb25maWdJbnRlcm5hbCwgZGF5OiBNb21lbnQpOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSByZW1vdmVOZWFyTW9udGhXZWVrcztcbn1cbiJdfQ==